name: Deploy to Azure

# Workflow for deploying Python app to Azure
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: pdf-processor-app
  PYTHON_VERSION: '3.11'
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: test_db
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        # Install requirements first
        pip install -r requirements.txt
        # Install test dependencies
        pip install pytest pytest-env pytest-cov pytest-asyncio
        # Install package in development mode
        pip install -e .

    - name: Debug Python Environment
      run: |
        echo "Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        echo "\nInstalled packages:"
        pip list
        echo "\nPackage location:"
        python -c "import pdf_processor; print(pdf_processor.__file__)"
        echo "\nTest files:"
        ls -R tests/

    - name: Run Tests
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        AZURE_STORAGE_CONTAINER_NAME: pdf-files
        POSTGRES_USER: ${{ env.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
        POSTGRES_DB: ${{ env.POSTGRES_DB }}
        POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "Environment setup:"
        python -c "
        import os
        print('\nEnvironment variables:')
        for k, v in os.environ.items():
            if any(x in k for x in ['POSTGRES_', 'AZURE_']):
                print(f'{k}={v if not k.endswith(\"PASSWORD\") else \"***\"}')
        "
        echo "\nRunning tests:"
        python -m pytest -v --tb=short tests/test_simple.py
        python -m pytest -v --tb=short tests/test_azure_services.py

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: . 